<feed xmlns="http://www.w3.org/2005/Atom"> <id></id><title>qweasfjbv</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-06-27T19:27:30+09:00</updated> <author> <name>qweasfjbv</name> <uri></uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator> <rights> © 2021 qweasfjbv </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>BOJ-토마토(7567)</title><link href="/posts/Baekjoon-7567/" rel="alternate" type="text/html" title="BOJ-토마토(7567)" /><published>2021-06-27T18:40:00+09:00</published> <updated>2021-06-27T18:40:00+09:00</updated> <id>/posts/Baekjoon-7567/</id> <content src="/posts/Baekjoon-7567/" /> <author> <name>qweasfjbv</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary> BOJ 토마토(7567) https://www.acmicpc.net/problem/7576 Answer #include &amp;lt;iostream&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;algorithm&amp;gt; using namespace std; int N, M; int tom[1000][1000]; bool check(int a, int b) { return a &amp;gt;= 0 &amp;amp;&amp;amp; b &amp;gt;= 0 &amp;amp;&amp;amp; a &amp;lt; M&amp;amp;&amp;amp; b &amp;lt; N &amp;amp;&amp;amp; tom[a][b] == 0; } int bfs() { int x, y; queue&amp;lt;int&amp;gt; X, Y; for (int i = 0; i &amp;lt; ... </summary> </entry> <entry><title>BOJ-미로 탐색(2178)</title><link href="/posts/Baekjoon-2178/" rel="alternate" type="text/html" title="BOJ-미로 탐색(2178)" /><published>2021-06-27T17:58:00+09:00</published> <updated>2021-06-27T19:26:30+09:00</updated> <id>/posts/Baekjoon-2178/</id> <content src="/posts/Baekjoon-2178/" /> <author> <name>qweasfjbv</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary> BOJ 미로 탐색(2178) https://www.acmicpc.net/problem/2178 Answer #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;cstring&amp;gt; using namespace std; int N, M; vector&amp;lt;string&amp;gt; maze; int checked[100][100]; bool check(int a, int b) { return a &amp;lt; N &amp;amp;&amp;amp; b &amp;lt; M&amp;amp;&amp;amp; a &amp;gt;= 0 &amp;amp;&amp;amp; b &amp;gt;= 0 &amp;amp;&amp;amp; checked[a][b]... </summary> </entry> <entry><title>BOJ-이집트 분수(4587)</title><link href="/posts/Baekjoon-4587/" rel="alternate" type="text/html" title="BOJ-이집트 분수(4587)" /><published>2021-02-24T20:58:00+09:00</published> <updated>2021-02-24T20:58:00+09:00</updated> <id>/posts/Baekjoon-4587/</id> <content src="/posts/Baekjoon-4587/" /> <author> <name>qweasfjbv</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary> BOJ 이집트 분수(4587) https://www.acmicpc.net/problem/4587 Answer #include &amp;lt;iostream&amp;gt; using namespace std; typedef long long int ll; // 유클리드 호제법 // x와 y의 최대공배수를 구하는 함수 // 분수 계산 후 최대공배수로 나누어야함 ll GCD(ll x, ll y) { ll r; while (1) { r = x % y; if (r == 0) { break; } else { x = y; y = r; } } return y; } int main() { cin.tie(0); ios::sync_with_stdio(0); ll a, b... </summary> </entry> <entry><title>BOJ-다항식 게임(11560)</title><link href="/posts/Baekjoon-11560/" rel="alternate" type="text/html" title="BOJ-다항식 게임(11560)" /><published>2021-02-21T17:56:00+09:00</published> <updated>2021-02-21T17:56:00+09:00</updated> <id>/posts/Baekjoon-11560/</id> <content src="/posts/Baekjoon-11560/" /> <author> <name>qweasfjbv</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary> BOJ 다항식 게임(11560) https://www.acmicpc.net/problem/11560 Answer #include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cstring&amp;gt; using namespace std; typedef long long int ll; ll ans[220]; void Set(ll arr[], int n) { for (int i = 0; i &amp;lt; n; i++) { arr[i] = 1; } return; } void cal(int k) { memset(ans, 0, 220 * sizeof(ll)); // 1인 경우는 예외처리 if (k == 1) { ans[0] = 1; ... </summary> </entry> <entry><title>BOJ-정사면체(1930)</title><link href="/posts/Baekjoon-1930/" rel="alternate" type="text/html" title="BOJ-정사면체(1930)" /><published>2021-02-08T22:15:00+09:00</published> <updated>2021-02-08T22:15:00+09:00</updated> <id>/posts/Baekjoon-1930/</id> <content src="/posts/Baekjoon-1930/" /> <author> <name>qweasfjbv</name> </author> <category term="Algorithm" /> <category term="Problem Solving" /> <summary> BOJ 정사면체(1930) https://www.acmicpc.net/problem/1930 Answer #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; using namespace std; int N; int a[4], b[4]; bool checkB[4]; int shuf[4][3] = { {1, 2, 3}, {0, 3, 2}, {0, 1, 3}, {0, 2, 1} }; // 4개의 숫자가 모두 같은지 확인 bool preCheck() { for (int i = 0; i &amp;lt; 4; i++) { checkB[i] = false; } int cnt = 0; for (int i = 0; i &amp;lt; 4; i++) { for (i... </summary> </entry> </feed>
