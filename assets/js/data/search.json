[ { "title": "BOJ-토마토(7567)", "url": "/posts/Baekjoon-7567/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-06-27 18:40:00 +0900", "snippet": "BOJ 토마토(7567)https://www.acmicpc.net/problem/7576Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;queue&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int N, M;int tom[1000][1000];bool check(int a, int b) { return a &amp;gt;= 0 &amp;amp;&amp;amp; b &amp;gt;= 0 &amp;amp;&amp;a..." }, { "title": "BOJ-미로 탐색(2178)", "url": "/posts/Baekjoon-2178/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-06-27 17:58:00 +0900", "snippet": "BOJ 미로 탐색(2178)https://www.acmicpc.net/problem/2178Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;queue&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;int N, M;vector&amp;lt;string&amp;gt; maze;int checked[100][100..." }, { "title": "BOJ-이집트 분수(4587)", "url": "/posts/Baekjoon-4587/", "categories": "Algorithm, Problem Solving", "tags": "Implementation, Greedy", "date": "2021-02-24 20:58:00 +0900", "snippet": "BOJ 이집트 분수(4587)https://www.acmicpc.net/problem/4587Answer#include &amp;lt;iostream&amp;gt;using namespace std;typedef long long int ll;// 유클리드 호제법// x와 y의 최대공배수를 구하는 함수// 분수 계산 후 최대공배수로 나누어야함ll GCD(ll x, ll y) { ll r; while (1) { r = x % y; if (r == 0) { break; } else { x = y; y = r; ..." }, { "title": "BOJ-다항식 게임(11560)", "url": "/posts/Baekjoon-11560/", "categories": "Algorithm, Problem Solving", "tags": "Implementation", "date": "2021-02-21 17:56:00 +0900", "snippet": "BOJ 다항식 게임(11560)https://www.acmicpc.net/problem/11560Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;typedef long long int ll;ll ans[220];void Set(ll arr[], int n) { for (int i = 0; i &amp;lt; n; i++) { arr[i] = 1; } retu..." }, { "title": "BOJ-정사면체(1930)", "url": "/posts/Baekjoon-1930/", "categories": "Algorithm, Problem Solving", "tags": "Implementation", "date": "2021-02-08 22:15:00 +0900", "snippet": "BOJ 정사면체(1930)https://www.acmicpc.net/problem/1930Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;int N;int a[4], b[4];bool checkB[4];int shuf[4][3] = { {1, 2, 3}, {0, 3, 2}, {0, 1, 3}, {0, 2, 1}};// 4개의 숫자가 모두 같은지 확인bool preCheck() { for (int i = 0; i &a..." }, { "title": "BOJ-추월(2002)", "url": "/posts/Baekjoon-2002/", "categories": "Algorithm, Problem Solving", "tags": "Implementation", "date": "2021-02-08 18:39:00 +0900", "snippet": "BOJ 추월(2002)https://www.acmicpc.net/problem/2002Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int N;vector&amp;lt;string&amp;gt; in;vector&amp;lt;string&amp;gt; out;int search(string s) { ..." }, { "title": "BOJ-적록색약(10026)", "url": "/posts/Baekjoon-10026/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-02-02 15:00:00 +0900", "snippet": "BOJ 적록색약(10026)https://www.acmicpc.net/problem/10026Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;int N;vector&amp;lt;string&amp;gt; rgb(100);bool check[100][100];void fill(int a, int b, cha..." }, { "title": "BOJ-알파벳(1987)", "url": "/posts/Baekjoon-1987/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory, BackTracking", "date": "2021-02-01 17:10:00 +0900", "snippet": "BOJ 알파벳(1987)https://www.acmicpc.net/problem/1987Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;int R, C;// 띄어쓰기 Xvector&amp;lt;string&amp;gt; map(20);bool c..." }, { "title": "BOJ-영역 구하기(2583)", "url": "/posts/Baekjoon-2583/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-01-31 17:31:00 +0900", "snippet": "BOJ 영역 구하기(2583)https://www.acmicpc.net/problem/2583Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;int M, N, K;int map[100][100];vector&amp;lt;int&amp;gt; ans;// 영역을 모두 0으로 채우고 직사각형이 그려진 곳..." }, { "title": "BOJ-안전 영역(2468)", "url": "/posts/Baekjoon-2468/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-01-31 15:55:00 +0900", "snippet": "BOJ 안전 영역(2468)https://www.acmicpc.net/problem/2468Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int N;int map[100][100];bool check[100][100];// n보다 작은 수는 다 0으로 변환// 0 : 물에 잠긴 칸void toZero(int n) { for (int i = 0; i &a..." }, { "title": "BOJ-섬의 개수(4963)", "url": "/posts/Baekjoon-4963/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-01-29 23:40:00 +0900", "snippet": "BOJ 섬의 개수(4963)https://www.acmicpc.net/problem/4963Answer#include &amp;lt;iostream&amp;gt;using namespace std;int N, M;int arr[50][50];void del(int a, int b) { if (a &amp;lt; 0 || a &amp;gt;= N || b &amp;lt; 0 || b &amp;gt;= M) { return; } if (arr[a][b] == 0) { return; } arr[a][b] = 0; del(a, b..." }, { "title": "AOJ-DICTIONARY", "url": "/posts/algospot-DICTIONARY/", "categories": "Algorithm, Problem Solving", "tags": "GraphTheory", "date": "2021-01-27 18:01:00 +0900", "snippet": "AOJ DICTIONARYhttps://www.algospot.com/judge/problem/read/DICTIONARYAnswer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;vector&amp;lt;string&amp;gt; dic;vector&am..." }, { "title": "BOJ-소풍(1242)", "url": "/posts/Baekjoon-1242/", "categories": "Algorithm, Problem Solving", "tags": "", "date": "2021-01-16 02:05:00 +0900", "snippet": "BOJ 소풍(1242)https://www.acmicpc.net/problem/1242Answer#include &amp;lt;iostream&amp;gt;using namespace std;int main() { int N, K, M; cin &amp;gt;&amp;gt; N &amp;gt;&amp;gt; K &amp;gt;&amp;gt; M; int point = 0; int cnt = 0; int offM = 0; int offN = 0; bool once = false; while (1) { cnt++; // 다음번..." }, { "title": "BOJ-전화번호 수수께끼(Small)(14369)", "url": "/posts/Baekjoon-14369/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2021-01-15 17:01:00 +0900", "snippet": "BOJ 전화번호 수수께끼(Small)(14369)https://www.acmicpc.net/problem/14369Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;stack&amp;gt;using namespace std;string s;vector&amp;lt;int&amp;gt; ans;bool fin = false;// 확인하면 모두 A로 바꾸고// 확인 끝나면..." }, { "title": "BOJ-탑(2493)", "url": "/posts/Baekjoon-2493/", "categories": "Algorithm, Problem Solving", "tags": "DataStructures", "date": "2021-01-14 22:15:00 +0900", "snippet": "BOJ 탑(2493)https://www.acmicpc.net/problem/2493Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;stack&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;// 더 커졌으면 작은애들 모두 pop 하고 top()으로 확인 후 push// 더 작아졌으면 바로 top 출력 후 pushstack&amp;lt;int&amp;gt; S;..." }, { "title": "BOJ-압축(1662)", "url": "/posts/Baekjoon-1662/", "categories": "Algorithm, Problem Solving", "tags": "", "date": "2021-01-14 19:52:00 +0900", "snippet": "BOJ 압축(1662)https://www.acmicpc.net/problem/1662Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;using namespace std;string s;int cnt = 0;int point = 0;int Count() { int ret = 0; while(point &amp;lt; s.length()){ if (s[point] == &#39;(&#39;) { ret--; point++; ret += ((..." }, { "title": "BOJ-행렬(1080)", "url": "/posts/Baekjoon-1080/", "categories": "Algorithm, Problem Solving", "tags": "Greedy", "date": "2021-01-07 16:50:00 +0900", "snippet": "BOJ 행렬(1080)https://www.acmicpc.net/problem/1080Answer#include &amp;lt;iostream&amp;gt;using namespace std;char arr[2][50][50];int N, M;// 3*3 크기를 0-&amp;gt;1, 1-&amp;gt;0 으로 바꿔줌void turn(int a, int b) { for (int i = 0; i &amp;lt; 3; i++) { for (int j = 0; j &amp;lt; 3; j++) { if (a + i &amp;g..." }, { "title": "BOJ-최소 힙(1927)", "url": "/posts/Baekjoon-1927/", "categories": "Algorithm, Problem Solving", "tags": "DataStructures", "date": "2021-01-06 21:27:00 +0900", "snippet": "BOJ 최소 힙(1927)https://www.acmicpc.net/problem/1927Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;queue&amp;gt;using namespace std;int main() { cin.tie(0); ios::sync_with_stdio(0); int N; cin &amp;gt;&amp;gt; N; int tmp; priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, greater&amp;lt..." }, { "title": "BOJ-유기농 배추(1012)", "url": "/posts/Baekjoon-1012/", "categories": "Algorithm, Problem Solving", "tags": "", "date": "2021-01-06 20:53:00 +0900", "snippet": "BOJ 유기농 배추(1012)https://www.acmicpc.net/problem/1012Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;bool ground[50][50] = { false };int M, N;// (a, b)와 인접한 모든 밭을 없애버림// 4방향 다 고려해야함bool Check(int a, int b) { if (a &amp;lt; 0 || b &amp;lt; 0 || a &amp;gt;=..." }, { "title": "AOJ-BRACKETS2", "url": "/posts/algospot-BRACKETS2/", "categories": "Algorithm, Problem Solving", "tags": "DataStructures", "date": "2021-01-06 19:09:00 +0900", "snippet": "AOJ BRACKETS2https://www.algospot.com/judge/problem/read/BRACKETS2Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;stack&amp;gt;using namespace std;int main() { string tmp; stack&amp;lt;char&amp;gt; S; int C; cin &amp;gt;&amp;gt; C; for (int t = 0; t &amp;lt;..." }, { "title": "BOJ-쇠막대기(10799)", "url": "/posts/Baekjoon-10799/", "categories": "Algorithm, Problem Solving", "tags": "DataStructures", "date": "2021-01-06 02:51:00 +0900", "snippet": "BOJ 쇠막대기(10799)https://www.acmicpc.net/problem/10799Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;stack&amp;gt;#include &amp;lt;string&amp;gt;using namespace std;int main() { string s; cin &amp;gt;&amp;gt; s; stack&amp;lt;char&amp;gt; stick; int cnt = 0; // )를 만나면 ( 를 지우고 남아있는 개수를 더하면 됨..." }, { "title": "AOJ-JOSEPHUS", "url": "/posts/algospot-JOSEPHUS/", "categories": "Algorithm, Problem Solving", "tags": "DataStructures", "date": "2021-01-05 17:34:00 +0900", "snippet": "AOJ JOSEPHUShttps://www.algospot.com/judge/problem/read/JOSEPHUSAnswer#include &amp;lt;iostream&amp;gt;#include &amp;lt;queue&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() { int C, N, K; cin &amp;gt;&amp;gt; C; for (int t = 0; t &amp;lt; C; t++) { cin &amp;gt;&amp;gt; N..." }, { "title": "BOJ-과제(13904)", "url": "/posts/Baekjoon-13904/", "categories": "Algorithm, Problem Solving", "tags": "Greedy", "date": "2021-01-04 17:04:00 +0900", "snippet": "BOJ 과제(13904)https://www.acmicpc.net/problem/13904Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;bool selected[1000] = { false };int main() { int N; cin &amp;gt;&amp;gt; N; vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;..." }, { "title": "BOJ-한 줄로 서기(1138)", "url": "/posts/Baekjoon-1138/", "categories": "Algorithm, Problem Solving", "tags": "Greedy", "date": "2021-01-04 02:16:00 +0900", "snippet": "BOJ 한 줄로 서기(1138)https://www.acmicpc.net/problem/1138Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;// vector에서 n번째 위치에 a를 끼워넣음void sand(vector&amp;lt;int&amp;gt;&amp;amp; ar, int a, int n) { vector&amp;lt;int&amp;gt; tmp; // tmp에 ar요소 n개만큼 빼서 넣어두고 // a를..." }, { "title": "BOJ-회의실배정(1931)", "url": "/posts/Baekjoon-1931/", "categories": "Algorithm, Problem Solving", "tags": "Greedy", "date": "2021-01-03 22:21:00 +0900", "snippet": "BOJ 회의실배정(1931)https://www.acmicpc.net/problem/1931Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() { cin.tie(0); ios::sync_with_stdio(0); int N; cin &amp;gt;&amp;gt; N; vector&amp;lt;vector&amp;lt;int&amp;gt;&a..." }, { "title": "AOJ-STRJOIN", "url": "/posts/algospot-STRJOIN/", "categories": "Algorithm, Problem Solving", "tags": "Greedy", "date": "2021-01-03 20:38:00 +0900", "snippet": "AOJ STRJOINhttps://www.algospot.com/judge/problem/read/STRJOINAnswer#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;bool cmp(int&amp;amp; a, int&amp;amp; b) { return a &amp;gt; b;}// a, b, c를 합칠 때 (a+b) + ((a+b) + c) 가 비용이 된다./..." }, { "title": "AOJ-MATCHORDER", "url": "/posts/algospot-MATCHORDER/", "categories": "Algorithm, Problem Solving", "tags": "Greedy", "date": "2021-01-02 21:30:00 +0900", "snippet": "AOJ MATCHORDERhttps://www.algospot.com/judge/problem/read/MATCHORDERAnswer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int rus[100];int kor[100];int N;void swap(int&amp;amp; a, int&amp;amp; b) { int tmp; tmp = a; a = b; b = tmp;}int main() { int C; cin &a..." }, { "title": "BOJ-이친수(2193)", "url": "/posts/Baekjoon-2193/", "categories": "Algorithm, Problem Solving", "tags": "DynamicProgramming", "date": "2021-01-01 18:38:00 +0900", "snippet": "BOJ 이친수(2193)https://www.acmicpc.net/problem/2193Answer-1#include &amp;lt;iostream&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;int N;long long int cache[90][2];// start에서 p로 시작하는 이친수 개수의 최댓값 반환long long int Count(int start, int p) { if (start == N-1) return 1; long long int&amp;amp..." }, { "title": "BOJ-계단 오르기(2579)", "url": "/posts/Baekjoon-2579/", "categories": "Algorithm, Problem Solving", "tags": "DynamicProgramming", "date": "2021-01-01 16:23:00 +0900", "snippet": "BOJ 계단 오르기(2579)https://www.acmicpc.net/problem/2579Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstring&amp;gt;using namespace std;// 마지막 도착 계단을 반드시 밟아야함int N;int arr[300];int cache[300][2];// start에서 시작했을 때 최댓값 반환// seq은 1, 2임. seq에 따라 cache가 달라지므로 2..." }, { "title": "BOJ-1로 만들기(1463)", "url": "/posts/Baekjoon-143/", "categories": "Algorithm, Problem Solving", "tags": "DynamicProgramming", "date": "2021-01-01 14:27:00 +0900", "snippet": "BOJ 1로 만들기(1463)https://www.acmicpc.net/problem/1463Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int Cache[1000001];int Count(int n, int cnt) { if (n == 1) { return cnt; } if (Cache[n] != -1) { return Cache[n]; } in..." }, { "title": "AOJ-LIS", "url": "/posts/algospot-LIS/", "categories": "Algorithm, Problem Solving", "tags": "DynamicProgramming", "date": "2020-12-31 22:03:00 +0900", "snippet": "AOJ LIShttps://www.algospot.com/judge/problem/read/LISAnswer-1#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int arr[500];int cnt[500];int findMax(int l) { int m = -1; for (int i = 0; i &amp;lt; l; i++) { if (arr[i] &amp;lt; arr[l]) { m = max(m, cnt[i]);..." }, { "title": "AOJ-TRIANGLEPATH", "url": "/posts/algospot-TRIANGLEPATH/", "categories": "Algorithm, Problem Solving", "tags": "DynamicProgramming", "date": "2020-12-31 18:04:00 +0900", "snippet": "AOJ TRIANGLEPATHhttps://www.algospot.com/judge/problem/read/TRIANGLEPATHAnswer-1#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int n, tri[100][100];int cache[100][100];int Count(int a, int b) { if (a == n - 1) return tri[a][b]; int&amp;amp; ret = cache[a][b..." }, { "title": "BOJ-스도쿠(2580)", "url": "/posts/Baekjoon-2580/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-29 22:41:00 +0900", "snippet": "BOJ 스도쿠(2580)https://www.acmicpc.net/problem/2580Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;cstdlib&amp;gt;using namespace std;int map[9][9];// 스도쿠 출력하는 함수void Print() { for (int i = 0; i &amp;lt; 9; i++) { for (int j = 0; j &amp;lt; 9; j++) { cout &amp;lt;&amp;lt; map[i][j] &amp;..." }, { "title": "BOJ-Wormholes(9874)", "url": "/posts/Baekjoon-9874/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-29 19:11:00 +0900", "snippet": "BOJ Wormholes(9874)https://www.acmicpc.net/problem/9874Answer#include &amp;lt;iostream&amp;gt;using namespace std;int N;int connection[12];int point[12][2];bool checked[12];// y좌표에서 x보다 큰 점 중 최소점 반환// 존재하지 않으면 -1 반환int findMin(int x, int y) { int min = -1; int remembery = 1000000001; for (int i =..." }, { "title": "BOJ-신기한 소수(2023)", "url": "/posts/Baekjoon-2023/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-28 22:49:00 +0900", "snippet": "BOJ 신기한 소수(2023)https://www.acmicpc.net/problem/2023Answer#include &amp;lt;iostream&amp;gt;using namespace std;int N;int cnt = 0;// 첫번째 숫자는 소수만 가능int start[4] = { 2, 3, 5, 7 };// 두번째 부터는 홀수만 가능int arr[6] = { 1, 3, 5, 7, 9 };// 소수라면 true 반환bool Check(int n) { if (n % 2 == 0) return false; // n은 홀수..." }, { "title": "AOJ-JUMPGAME", "url": "/posts/algospot-JUMPGAME/", "categories": "Algorithm, Problem Solving", "tags": "DynamicProgramming", "date": "2020-12-28 15:49:00 +0900", "snippet": "AOJ JUMPGAMEhttps://www.algospot.com/judge/problem/read/JUMPGAMEAnswer#include &amp;lt;iostream&amp;gt;using namespace std;int map[100][100];// 기본적으로 -1, false면 0, true면 1int pos[100][100];int N;// 오른쪽이나 왼쪽으로만 진행bool Jump(int a, int b) { // 목적지에 도착했으면 if (a == N - 1 &amp;amp;&amp;amp; b == N - 1..." }, { "title": "BOJ-색종이 만들기(2630)", "url": "/posts/Baekjoon-2630/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 19:17:00 +0900", "snippet": "BOJ 색종이 만들기(2630)https://www.acmicpc.net/problem/2630Answer#include &amp;amp;lt;iostream&amp;amp;gt;using namespace std;int Board[128][128];bool same = true;int Cnt[2] = { 0, 0 };void Count(int a, int b, int n) { int tmp = Board[a][b]; same = true; for (int i = a; i &amp;amp;lt; a + n; i++) { fo..." }, { "title": "BOJ-히스토그램에서 가장 큰 직사각형(6549)", "url": "/posts/Baekjoon-6549/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 18:49:00 +0900", "snippet": "BOJ 히스토그램에서 가장 큰 직사각형(6549)https://www.acmicpc.net/problem/6549Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int his[100000];long long int find(int a, int b) { if (a == b) return his[a]; long long int mid = (a + b) / 2; long long int left = mid, righ..." }, { "title": "BOJ-히스토그램(1725)", "url": "/posts/Baekjoon-1725/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 18:29:00 +0900", "snippet": "BOJ 히스토그램(1725)https://www.acmicpc.net/problem/1725Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int his[100000];int find(int a, int b) { if (a == b) return his[a]; int mid = (a + b) / 2; int left = mid, right = mid + 1; int ret = max(find(a, left), ..." }, { "title": "AOJ-FENCE", "url": "/posts/algospot-FENCE/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 17:36:00 +0900", "snippet": "AOJ FENCEhttps://www.algospot.com/judge/problem/read/FENCEAnswer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int fence[20000];int Div(int a, int b) { int ret = 0; if (a == b) return fence[a]; int mid = (a + b) / 2; ret = max(Div(a, mid), Div(mid + 1, b))..." }, { "title": "BOJ-Z(1074)", "url": "/posts/Baekjoon-1074/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 15:19:00 +0900", "snippet": "BOJ Z(1074)https://www.acmicpc.net/problem/1074Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;cmath&amp;gt;using namespace std;int N, r, c;int answ = 0;void Count() { // 기저사례 : N이 0이라면 if (N == 0) { cout &amp;lt;&amp;lt; answ; exit(0); } int range = pow(2, N); int offset = range * range ..." }, { "title": "BOJ-종이의 개수(1780)", "url": "/posts/Baekjoon-1780/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 14:15:00 +0900", "snippet": "BOJ 종이의 개수(1780)https://www.acmicpc.net/problem/1780Answer#include &amp;lt;iostream&amp;gt;using namespace std;// 3^7 = 2187int Paper[2187][2187];// n으로 채워진 종이의 개수는 cnt[n+1]에 저장int cnt[3] = { 0, 0, 0 };bool same;void Count(int a, int b, int n) { same = true; int tmp = Paper[a][b]; for (int i = a;..." }, { "title": "BOJ-쿼드트리(1992)", "url": "/posts/Baekjoon-1992/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-26 13:25:00 +0900", "snippet": "BOJ 쿼드트리(1992)https://www.acmicpc.net/problem/1992Answer#include &amp;lt;iostream&amp;gt;using namespace std;char Board[64][64];bool check;// 시작점과 크기를 줌.// 전부 1 이거나 0 이면 바로 출력 후 반환void Quad(int a, int b, int n) { check = true; char tmp = Board[a][b]; for (int i = a; i &amp;lt; a+n; i++) { for (i..." }, { "title": "BOJ-부등호(2592)", "url": "/posts/Baekjoon-2592/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-26 01:46:00 +0900", "snippet": "BOJ 부등호(2592)https://www.acmicpc.net/problem/2529Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;using namespace std;char b[9];int k;bool first = false;string arr;string small, big;int point = 0;bool selected[10] = { false };void Print() { for (int i = 0; i &amp;lt; k + 1; i..." }, { "title": "BOJ-N과 M(9-12)", "url": "/posts/Baekjoon-NandM(9-12)/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-25 23:05:00 +0900", "snippet": "BOJ N과 M(9)(15663)https://www.acmicpc.net/problem/15663Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;int N, M;int cnt = 0;int arr[8];int Get[8];int Cnt[8] = { 0 };void Print() { for (int i = 0; i &amp;lt; M; i++) { cou..." }, { "title": "BOJ-N과 M(5-8)", "url": "/posts/Baekjoon-NandM(5-8)/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-25 23:05:00 +0900", "snippet": "BOJ N과 M(5)(15654)https://www.acmicpc.net/problem/15654Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;int N, M;int cnt = 0;int arr[8];bool selected[8] = { false };void Print() { for (int i = 0; i &amp;lt; M; i++) { cout..." }, { "title": "BOJ-N과 M(1-4)", "url": "/posts/Baekjoon-NandM(1-4)/", "categories": "Algorithm, Problem Solving", "tags": "BackTracking", "date": "2020-12-25 23:05:00 +0900", "snippet": "BOJ N과 M(1)(15649)https://www.acmicpc.net/problem/15649Answer#include &amp;lt;iostream&amp;gt;using namespace std;int N, M;int cnt = 0;bool selected[8] = { false };int arr[8];void Print() { for (int i = 0; i &amp;lt; M; i++) { cout &amp;lt;&amp;lt; arr[i] + 1 &amp;lt;&amp;lt; &quot; &quot;; }}vo..." }, { "title": "AOJ-QUADTREE", "url": "/posts/algospot-QUADTREE/", "categories": "Algorithm, Problem Solving", "tags": "DivideAndConquer", "date": "2020-12-25 16:37:00 +0900", "snippet": "AOJ QUADTREEhttps://www.algospot.com/judge/problem/read/QUADTREEAnswer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;using namespace std;// 상하로 뒤집는건// x(A)(B)(C)(D)를 x(C)(D)(A)(B)순으로 출력 (재귀로)string s;int point = 0;void Print(bool print) { if ((s[point] == &#39;w&#39; || s[point] ..." }, { "title": "BOJ-부분수열의 합(1182)", "url": "/posts/Baekjoon-1182/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-24 19:53:00 +0900", "snippet": "BOJ 부분수열의 합(1182)https://www.acmicpc.net/problem/1182Answer#include &amp;lt;iostream&amp;gt;using namespace std;int arr[20];int N, S;int sum = 0, cnt = 0;bool start = false;void Count(int a) { // return하면 {a, b} 와 {a, b, c, -c} 중 {a, b}밖에 세지 않음. if (sum == S &amp;amp;&amp;amp; start) cnt++; star..." }, { "title": "BOJ-N-Queen(9663)", "url": "/posts/Baekjoon-9663/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-23 21:57:00 +0900", "snippet": "BOJ N-Queen(9663)https://www.acmicpc.net/problem/9663Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;// Queen을 둘 수 있으면 true, 못 두는 곳엔 false// 여러개가 겹칠 수 있으므로 int로 선언.int Board[15][15] = { 0 };int N;int queen = 0;// (a, b)에 Queen이 놓였을 때 다른 Queen이 들어갈 수 없도..." }, { "title": "BOJ-색칠1(1117)", "url": "/posts/Baekjoon-1117/", "categories": "Algorithm, Problem Solving", "tags": "Implementation", "date": "2020-12-23 19:02:00 +0900", "snippet": "BOJ 색칠1(1117)https://www.acmicpc.net/problem/1117Answer#include &amp;lt;iostream&amp;gt;using namespace std;int main() { cin.tie(0); long long int W, H, f, c, x1, x2, y1, y2; cin &amp;gt;&amp;gt; W &amp;gt;&amp;gt; H &amp;gt;&amp;gt; f &amp;gt;&amp;gt; c &amp;gt;&amp;gt; x1 &amp;gt;&amp;gt; y1 &a..." }, { "title": "BOJ-도미노 찾기(1553)", "url": "/posts/Baekjoon-1553/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-23 14:39:00 +0900", "snippet": "BOJ 도미노 찾기(1553)https://www.acmicpc.net/problem/1553Answer#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;using namespace std;// 차례로 입력받는 격자와 사용한 도미노이다.int Board[8][7];bool filled[7][7] = { false };int offset[2][2][2] = { {{0, 0}, {1, 0}}, {{0, 0}, {0, 1}} };// Board의 왼쪽 위에서부터 채워나..." }, { "title": "BOJ-퇴사(14501)", "url": "/posts/Baekjoon-14501/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-23 12:36:00 +0900", "snippet": "BOJ 퇴사 (14501)https://www.acmicpc.net/problem/14501Answer#include &amp;lt;iostream&amp;gt;using namespace std;int N;int plan[15][2];int Count(int cur) { if (cur + plan[cur][0] &amp;gt; N) { // 더이상 예약을 잡지 못함. return 0; } else if (cur + plan[cur][0] == N) { return plan[cur][1]; } int ret = 0; fo..." }, { "title": "BOJ-덩치(7568)", "url": "/posts/Baekjoon-7568/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-22 22:20:00 +0900", "snippet": "BOJ 덩치 (7568)https://www.acmicpc.net/problem/7568Answer#include &amp;lt;iostream&amp;gt;using namespace std;int per[50][2];int main() { int N; cin &amp;gt;&amp;gt; N; for (int i = 0; i &amp;lt; N; i++) { cin &amp;gt;&amp;gt; per[i][0] &amp;gt;&amp;gt; per[i][1]; } // 자신보다 덩치큰 사람의 수 + 1 이 자신의 순위이..." }, { "title": "AOJ-BOARDCOVER", "url": "/posts/algospot-BOARDCOVER/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-22 19:32:00 +0900", "snippet": "AOJ BOARDCOVERhttps://www.algospot.com/judge/problem/read/BOARDCOVERAnswer#include &amp;lt;iostream&amp;gt;using namespace std;char Board[20][20];int C, H, W;// BOARD를 왼쪽 위에서부터 덮으면서 내려오기 때문에// (0, 0) 기준 (0, n) 과 (m, n) (m, n &amp;lt; 0) 은 다 덮여있다고 생각int type[4][3][2] = { {{0, 0}, {0, 1}, {1, 0}}, ..." }, { "title": "AOJ-PICNIC", "url": "/posts/algospot-PICNIC/", "categories": "Algorithm, Problem Solving", "tags": "BruteForce", "date": "2020-12-21 21:53:00 +0900", "snippet": "AOJ PICNIChttps://www.algospot.com/judge/problem/read/PICNIC처음엔 반복문으로 할려 했는데 도저히 안풀려서 재귀함수로 구현했다.Wrong Code#include &amp;lt;iostream&amp;gt;using namespace std;bool isFriend[10][10] = { false };bool hasPartner[10] = { false };int Match(int n) { int start = -1; for (int i = 0; i &amp;lt; n; i++) {..." }, { "title": "Customize the Favicon", "url": "/posts/customize-the-favicon/", "categories": "Blogging, Tutorial", "tags": "favicon", "date": "2019-08-11 01:34:00 +0900", "snippet": "In Chirpy, the image files of Favicons are placed in assets/img/favicons/. You may need to replace them with your own. So let’s see how to customize these Favicons.With a square image (PNG, JPG or GIF) in hand, open the site Favicon &amp;amp; App Icon Generator and upload your original image.Clic..." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 21:55:00 +0900", "snippet": "InstallationFork Chirpy on GitHub, rename the repository to USERNAME.github.io (where USERNAME is your GitHub username), and then open terminal and clone the fork to local by:$ git clone https://github.com/USERNAME/USERNAME.github.io.git -b master --single-branchSetting up the local envrionmentIf..." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 15:10:00 +0900", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _post/ of the root directory. Please note that the EXTENSION must be one of md and markdown.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD ..." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Blogging, Demo", "tags": "typography", "date": "2019-08-08 12:33:00 +0900", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at o..." } ]
